<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.project.gwasil_zero.mapper.ProductMapper">
	<select id = "selectProductList" parameterType="hashmap" resultType="com.project.gwasil_zero.model.Packages">
		SELECT * 
		FROM packages
	</select>	
	
	<delete id = "deleteProductList" parameterType="hashmap" >
		DELETE FROM PACKAGES WHERE PACKAGE_NAME IN 
       <foreach collection="list" item="item" open="(" separator="," close=")">
           #{item}
       </foreach>
    </delete>
    
    <insert id="insertProduct" parameterType="hashmap">
		INSERT INTO PACKAGES(PACKAGE_NAME, PACKAGE_PRICE, PACKAGE_INFO, PACKAGE_STATUS)
		VALUES(#{packageName}, #{packagePrice}, #{packageInfo}, #{packageStatus})
	</insert>
	
	<select id="selectProduct" parameterType="hashmap" resultType="com.project.gwasil_zero.model.Packages">
		SELECT * 
		FROM PACKAGES
		WHERE PACKAGE_NAME = #{packageName}
	</select>
	
	<update id="updateProduct" parameterType="hashmap">
		UPDATE PACKAGES
		SET
			PACKAGE_INFO = #{packageInfo},
			PACKAGE_PRICE = #{packagePrice},
			PACKAGE_STATUS = #{packageStatus}
		WHERE PACKAGE_NAME = #{packageName}
	</update>
	
	<select id="selectRefundList" parameterType="hashmap" resultType="com.project.gwasil_zero.model.Pay">
		SELECT 
	        P.ORDER_ID,
	        P.PACKAGE_NAME,
	        P.PAY_TIME,
	        P.PRICE,
	        P.PAY_STATUS,
	        NVL(U.USER_NAME, L.LAWYER_NAME) AS NAME,
	        CASE 
	            WHEN P.USER_ID IS NOT NULL THEN 'U'
	            WHEN P.LAWYER_ID IS NOT NULL THEN 'L'
	        END AS USERTYPE,
	        NVL(P.USER_ID, P.LAWYER_ID) AS RECEIVER_ID
	    FROM PAY P
	    LEFT JOIN TBL_USER U ON P.USER_ID = U.USER_ID
	    LEFT JOIN LAWYER L ON P.LAWYER_ID = L.LAWYER_ID
	    WHERE P.PAY_STATUS = 'REQUEST'
	</select>
	
	<update id="upadteRefund" parameterType="hashmap">
	    UPDATE PAY
	    SET 
	        PAY_STATUS = 'REFUNDED',
	        REFUND_TIME = SYSDATE
	    WHERE ORDER_ID = #{orderId}
	</update>
	
	<update id="CancelRefund" parameterType="hashmap">
	    UPDATE PAY
	    SET 
	        PAY_STATUS = 'PAID',
	        REFUND_TIME = NULL
	    WHERE ORDER_ID = #{orderId}
	</update>
	
	<insert id="insertNotification" parameterType="hashmap">
	    INSERT INTO NOTIFICATION (
	        NOTI_NO, RECEIVER_ID, NOTI_TYPE, CONTENTS, IS_READ, CREATED_AT, SENDER_ID
	    ) VALUES (
	        SEQ_NOTIFICATION.NEXTVAL,
	        #{receiverId},
	        #{notiType},
	        #{contents},
	        #{isRead},
	        SYSDATE,
	        #{senderId}
	    )
	</insert>

</mapper>